version: '3.8'

services:
  store:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: store
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - redis
      - mysql
      - vault
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - REDIS_HOST=${REDIS_HOST}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DB_NAME=${MYSQL_DB_NAME}
      - VAULT_ENABLED=${VAULT_ENABLED}
      - VAULT_ADDR=${VAULT_ADDR}
      - VAULT_TOKEN=${VAULT_TOKEN}
      - VAULT_SECRET_PATH=${VAULT_SECRET_PATH}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB_NAME}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "${PHPMYADMIN_PORT}:${PHPMYADMIN_DEFAULT_PORT}"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}

  vault:
    image: vault:1.13.3
    container_name: vault
    ports:
      - "${VAULT_PORT}:${VAULT_PORT}"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_TOKEN}
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:${VAULT_PORT}"
    cap_add:
      - IPC_LOCK